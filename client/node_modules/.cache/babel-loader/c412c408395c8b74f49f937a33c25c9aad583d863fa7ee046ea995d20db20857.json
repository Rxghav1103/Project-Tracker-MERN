{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragha\\\\Desktop\\\\Backend\\\\React\\\\GitPT\\\\Project-Tracker\\\\client\\\\src\\\\components\\\\Generator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n//import './ProjectGenerator.css'; // Ensure your CSS file path is correct\nimport \"../css/Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Generator = () => {\n  _s();\n  const [projectName, setProjectName] = useState('');\n  const [projectId, setProjectId] = useState('');\n  const [projectPassword, setProjectPassword] = useState('');\n  const handleGenerate = () => {\n    const id = `proj-${Math.random().toString(36).substr(2, 9)}`;\n    const password = Math.random().toString(36).substr(2, 12);\n    setProjectId(id);\n    setProjectPassword(password);\n  };\n  const handleSave = async () => {\n    if (projectName && projectId && projectPassword) {\n      try {\n        await axios.post('http://your-backend-url.com/projects', {\n          name: projectName,\n          id: projectId,\n          password: projectPassword\n        });\n        alert('Project saved successfully!');\n      } catch (error) {\n        console.error('Error saving project:', error);\n        alert('Failed to save project.');\n      }\n    } else {\n      alert('Please generate project ID and password first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Project Name\",\n      value: projectName,\n      onChange: e => setProjectName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Project ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this), \" \", projectId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Project Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this), \" \", projectPassword]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save to Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Generator, \"w5ghG2Bze9jKTzKeZTMpFRW2jcQ=\");\n_c = Generator;\nexport default Generator;\nvar _c;\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Generator","_s","projectName","setProjectName","projectId","setProjectId","projectPassword","setProjectPassword","handleGenerate","id","Math","random","toString","substr","password","handleSave","post","name","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ragha/Desktop/Backend/React/GitPT/Project-Tracker/client/src/components/Generator.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n//import './ProjectGenerator.css'; // Ensure your CSS file path is correct\r\nimport \"../css/Login.module.css\"\r\n\r\nconst Generator = () => {\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectId, setProjectId] = useState('');\r\n  const [projectPassword, setProjectPassword] = useState('');\r\n\r\n  const handleGenerate = () => {\r\n    const id = `proj-${Math.random().toString(36).substr(2, 9)}`;\r\n    const password = Math.random().toString(36).substr(2, 12);\r\n    setProjectId(id);\r\n    setProjectPassword(password);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (projectName && projectId && projectPassword) {\r\n      try {\r\n        await axios.post('http://your-backend-url.com/projects', {\r\n          name: projectName,\r\n          id: projectId,\r\n          password: projectPassword\r\n        });\r\n        alert('Project saved successfully!');\r\n      } catch (error) {\r\n        console.error('Error saving project:', error);\r\n        alert('Failed to save project.');\r\n      }\r\n    } else {\r\n      alert('Please generate project ID and password first.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-generator\">\r\n      <h2>Project Generator</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Project Name\"\r\n        value={projectName}\r\n        onChange={(e) => setProjectName(e.target.value)}\r\n      />\r\n      <button onClick={handleGenerate}>Generate</button>\r\n      {projectId && (\r\n        <div>\r\n          <p><strong>Project ID:</strong> {projectId}</p>\r\n          <p><strong>Project Password:</strong> {projectPassword}</p>\r\n        </div>\r\n      )}\r\n      <button onClick={handleSave}>Save to Backend</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Generator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}