{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragha\\\\Desktop\\\\Backend\\\\React\\\\GitPT\\\\Project-Tracker\\\\client\\\\src\\\\components\\\\ProjectLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ProjectGenerator.css'; // Ensure your CSS file path is correct\n\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLogin = () => {\n  _s();\n  const [projectId, setProjectId] = useState('');\n  const [projectPassword, setProjectPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    //proj-65dcec148\n    //qdf2t991ckc\n\n    // try {\n    //   const response = await axios.post('http://your-backend-url.com/login', {\n    //     id: projectId,\n    //     password: projectPassword\n    //   });\n    //   alert('Login successful!');\n    // } catch (error) {\n    //   console.error('Error logging in:', error);\n    //   alert('Login failed.');\n    // }\n\n    const response = await fetch(\"http://localhost:5555/project/get\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: projectId,\n        password: projectPassword\n      })\n    });\n    if (response.status === 200) {\n      const data = await response.json();\n      localStorage.setItem(\"project\", projectId);\n      navigate(`/task/${projectId}`);\n    } else {\n      const data = await response.json();\n      alert(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to Existing Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Project ID...\",\n      value: projectId,\n      onChange: e => setProjectId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Project Password...\",\n      value: projectPassword,\n      onChange: e => setProjectPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLogin, \"G1W8TvsRKdjaxFVnilNitwqBxms=\", false, function () {\n  return [useNavigate];\n});\n_c = ProjectLogin;\nexport default ProjectLogin;\nvar _c;\n$RefreshReg$(_c, \"ProjectLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ProjectLogin","_s","projectId","setProjectId","projectPassword","setProjectPassword","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","id","password","status","data","json","localStorage","setItem","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ragha/Desktop/Backend/React/GitPT/Project-Tracker/client/src/components/ProjectLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ProjectGenerator.css'; // Ensure your CSS file path is correct\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProjectLogin = () => {\r\n  const [projectId, setProjectId] = useState('');\r\n  const [projectPassword, setProjectPassword] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const handleLogin = async () => {\r\n    //proj-65dcec148\r\n    //qdf2t991ckc\r\n    \r\n    // try {\r\n    //   const response = await axios.post('http://your-backend-url.com/login', {\r\n    //     id: projectId,\r\n    //     password: projectPassword\r\n    //   });\r\n    //   alert('Login successful!');\r\n    // } catch (error) {\r\n    //   console.error('Error logging in:', error);\r\n    //   alert('Login failed.');\r\n    // }\r\n\r\n    const response = await fetch(\"http://localhost:5555/project/get\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id:projectId, password:projectPassword }),\r\n    });\r\n\r\n    if(response.status === 200){\r\n      const data = await response.json();\r\n\r\n      localStorage.setItem(\"project\", projectId)\r\n\r\n      navigate(`/task/${projectId}`)\r\n    }else{\r\n      const data = await response.json();\r\n      alert(data.message)\r\n\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-generator\">\r\n      <h2>Login to Existing Project</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Project ID...\"\r\n        value={projectId}\r\n        onChange={(e) => setProjectId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter Project Password...\"\r\n        value={projectPassword}\r\n        onChange={(e) => setProjectPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB,CAAC,CAAC;;AAEjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,EAAE,EAACb,SAAS;QAAEc,QAAQ,EAACZ;MAAgB,CAAC;IACjE,CAAC,CAAC;IAEF,IAAGI,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAC;MACzB,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEnB,SAAS,CAAC;MAE1CI,QAAQ,CAAC,SAASJ,SAAS,EAAE,CAAC;IAChC,CAAC,MAAI;MACH,MAAMgB,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCG,KAAK,CAACJ,IAAI,CAACK,OAAO,CAAC;IAGrB;EAGF,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC1B,OAAA;MAAA0B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAE9B,SAAU;MACjB+B,QAAQ,EAAGC,CAAC,IAAK/B,YAAY,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACF9B,OAAA;MACE+B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAE5B,eAAgB;MACvB6B,QAAQ,EAAGC,CAAC,IAAK7B,kBAAkB,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACF9B,OAAA;MAAQqC,OAAO,EAAE7B,WAAY;MAAAkB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA9DID,YAAY;EAAA,QAICH,WAAW;AAAA;AAAAwC,EAAA,GAJxBrC,YAAY;AAgElB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}