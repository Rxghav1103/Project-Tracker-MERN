{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragha\\\\Desktop\\\\Backend\\\\React\\\\GitPT\\\\Project-Tracker\\\\client\\\\src\\\\components\\\\ProjectLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ProjectGenerator.css'; // Ensure your CSS file path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLogin = () => {\n  _s();\n  const [projectId, setProjectId] = useState('');\n  const [projectPassword, setProjectPassword] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://your-backend-url.com/login', {\n        id: projectId,\n        password: projectPassword\n      });\n      alert('Login successful!');\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert('Login failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to Existing Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Project ID...\",\n      value: projectId,\n      onChange: e => setProjectId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Project Password...\",\n      value: projectPassword,\n      onChange: e => setProjectPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLogin, \"LsvRK1WR5FcbIwmV1d5jpnC708c=\");\n_c = ProjectLogin;\nexport default ProjectLogin;\nvar _c;\n$RefreshReg$(_c, \"ProjectLogin\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProjectLogin","_s","projectId","setProjectId","projectPassword","setProjectPassword","handleLogin","response","post","id","password","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ragha/Desktop/Backend/React/GitPT/Project-Tracker/client/src/components/ProjectLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ProjectGenerator.css'; // Ensure your CSS file path is correct\r\n\r\nconst ProjectLogin = () => {\r\n  const [projectId, setProjectId] = useState('');\r\n  const [projectPassword, setProjectPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://your-backend-url.com/login', {\r\n        id: projectId,\r\n        password: projectPassword\r\n      });\r\n      alert('Login successful!');\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n      alert('Login failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-generator\">\r\n      <h2>Login to Existing Project</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Project ID...\"\r\n        value={projectId}\r\n        onChange={(e) => setProjectId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter Project Password...\"\r\n        value={projectPassword}\r\n        onChange={(e) => setProjectPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,mCAAmC,EAAE;QACrEC,EAAE,EAAEP,SAAS;QACbQ,QAAQ,EAAEN;MACZ,CAAC,CAAC;MACFO,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCD,KAAK,CAAC,eAAe,CAAC;IACxB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChB,OAAA;MAAAgB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAEpB,SAAU;MACjBqB,QAAQ,EAAGC,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFpB,OAAA;MACEqB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAElB,eAAgB;MACvBmB,QAAQ,EAAGC,CAAC,IAAKnB,kBAAkB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACFpB,OAAA;MAAQ2B,OAAO,EAAEpB,WAAY;MAAAS,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}